server:
 port: 8804

spring:
  application:
    name: contract
  datasource:
    username: root
    password: 123
    url: jdbc:mysql://127.0.0.1:3306/commonuser?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    removeAbandonedTimeout: 60
    removeAbandoned: true
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: true
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat=true
eureka:
 client:
  serviceUrl:
   defaultZone: http://127.0.0.1:8888/eureka/

mybatis:
  mapper-locations: classpath:mapping/*Mapper.xml

logging:
  level:
    root: info
  pattern:
    console: "%d - %msg%n" #     定义打印的日志格式
  path: ./log/
  file: log.log #设置保存日志的日志文件
  register-shutdown-hook: false #当初始化日志系统时，为其注册一个关闭钩子。
