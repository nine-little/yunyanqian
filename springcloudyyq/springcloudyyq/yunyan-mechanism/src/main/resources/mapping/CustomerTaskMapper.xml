<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.yanmai.dao.CustomerTaskMapper" >
  <resultMap id="BaseResultMap" type="org.yanmai.model.CustomerTask" >
    <id column="taskid" property="taskid" jdbcType="VARCHAR" />
    <id column="customerid" property="customerid" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="at_step" property="atStep" jdbcType="INTEGER" />
    <result column="customerdoccode" property="customerdoccode" jdbcType="VARCHAR" />
    <result column="customersex" property="customersex" jdbcType="VARCHAR" />
    <result column="customernation" property="customernation" jdbcType="VARCHAR" />
    <result column="customerbirthday" property="customerbirthday" jdbcType="VARCHAR" />
    <result column="customerauthority" property="customerauthority" jdbcType="VARCHAR" />
    <result column="customerexpdate" property="customerexpdate" jdbcType="VARCHAR" />
    <result column="customeridheadurl" property="customeridheadurl" jdbcType="VARCHAR" />
    <result column="customeraddress" property="customeraddress" jdbcType="VARCHAR" />
    <result column="identityFacadefileurl" property="identityfacadefileurl" jdbcType="VARCHAR" />
    <result column="identityBackfileurl" property="identitybackfileurl" jdbcType="VARCHAR" />
    <result column="scenephotofileurl" property="scenephotofileurl" jdbcType="VARCHAR" />
    <result column="signaturefileurl" property="signaturefileurl" jdbcType="VARCHAR" />
    <result column="tapefileurl" property="tapefileurl" jdbcType="VARCHAR" />
    <result column="isfacecompare" property="isfacecompare" jdbcType="INTEGER" />
    <result column="gridphotosource" property="gridphotosource" jdbcType="INTEGER" />
    <result column="call_status" property="callStatus" jdbcType="INTEGER" />
    <result column="face_memo" property="faceMemo" jdbcType="VARCHAR" />
    <result column="face_time" property="faceTime" jdbcType="TIMESTAMP" />
    <result column="face_statu" property="faceStatu" jdbcType="VARCHAR" />
    <result column="ismain" property="ismain" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    taskid, customerid, createTime, at_step, customerdoccode, customersex, customernation, 
    customerbirthday, customerauthority, customerexpdate, customeridheadurl, customeraddress, 
    identityFacadefileurl, identityBackfileurl, scenephotofileurl, signaturefileurl, 
    tapefileurl, isfacecompare, gridphotosource, call_status, face_memo, face_time, face_statu, 
    ismain
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.yanmai.model.example.CustomerTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_customer_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="org.yanmai.model.CustomerTaskKey" >
    select 
    <include refid="Base_Column_List" />
    from t_customer_task
    where taskid = #{taskid,jdbcType=VARCHAR}
      and customerid = #{customerid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="org.yanmai.model.CustomerTaskKey" >
    delete from t_customer_task
    where taskid = #{taskid,jdbcType=VARCHAR}
      and customerid = #{customerid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.yanmai.model.example.CustomerTaskExample" >
    delete from t_customer_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.yanmai.model.CustomerTask" >
    insert into t_customer_task (taskid, customerid, createTime, 
      at_step, customerdoccode, customersex, 
      customernation, customerbirthday, customerauthority, 
      customerexpdate, customeridheadurl, customeraddress, 
      identityFacadefileurl, identityBackfileurl, 
      scenephotofileurl, signaturefileurl, tapefileurl, 
      isfacecompare, gridphotosource, call_status, 
      face_memo, face_time, face_statu, 
      ismain)
    values (#{taskid,jdbcType=VARCHAR}, #{customerid,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{atStep,jdbcType=INTEGER}, #{customerdoccode,jdbcType=VARCHAR}, #{customersex,jdbcType=VARCHAR}, 
      #{customernation,jdbcType=VARCHAR}, #{customerbirthday,jdbcType=VARCHAR}, #{customerauthority,jdbcType=VARCHAR}, 
      #{customerexpdate,jdbcType=VARCHAR}, #{customeridheadurl,jdbcType=VARCHAR}, #{customeraddress,jdbcType=VARCHAR}, 
      #{identityfacadefileurl,jdbcType=VARCHAR}, #{identitybackfileurl,jdbcType=VARCHAR}, 
      #{scenephotofileurl,jdbcType=VARCHAR}, #{signaturefileurl,jdbcType=VARCHAR}, #{tapefileurl,jdbcType=VARCHAR}, 
      #{isfacecompare,jdbcType=INTEGER}, #{gridphotosource,jdbcType=INTEGER}, #{callStatus,jdbcType=INTEGER}, 
      #{faceMemo,jdbcType=VARCHAR}, #{faceTime,jdbcType=TIMESTAMP}, #{faceStatu,jdbcType=VARCHAR}, 
      #{ismain,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.yanmai.model.CustomerTask" >
    insert into t_customer_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        taskid,
      </if>
      <if test="customerid != null" >
        customerid,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="atStep != null" >
        at_step,
      </if>
      <if test="customerdoccode != null" >
        customerdoccode,
      </if>
      <if test="customersex != null" >
        customersex,
      </if>
      <if test="customernation != null" >
        customernation,
      </if>
      <if test="customerbirthday != null" >
        customerbirthday,
      </if>
      <if test="customerauthority != null" >
        customerauthority,
      </if>
      <if test="customerexpdate != null" >
        customerexpdate,
      </if>
      <if test="customeridheadurl != null" >
        customeridheadurl,
      </if>
      <if test="customeraddress != null" >
        customeraddress,
      </if>
      <if test="identityfacadefileurl != null" >
        identityFacadefileurl,
      </if>
      <if test="identitybackfileurl != null" >
        identityBackfileurl,
      </if>
      <if test="scenephotofileurl != null" >
        scenephotofileurl,
      </if>
      <if test="signaturefileurl != null" >
        signaturefileurl,
      </if>
      <if test="tapefileurl != null" >
        tapefileurl,
      </if>
      <if test="isfacecompare != null" >
        isfacecompare,
      </if>
      <if test="gridphotosource != null" >
        gridphotosource,
      </if>
      <if test="callStatus != null" >
        call_status,
      </if>
      <if test="faceMemo != null" >
        face_memo,
      </if>
      <if test="faceTime != null" >
        face_time,
      </if>
      <if test="faceStatu != null" >
        face_statu,
      </if>
      <if test="ismain != null" >
        ismain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null" >
        #{customerid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="atStep != null" >
        #{atStep,jdbcType=INTEGER},
      </if>
      <if test="customerdoccode != null" >
        #{customerdoccode,jdbcType=VARCHAR},
      </if>
      <if test="customersex != null" >
        #{customersex,jdbcType=VARCHAR},
      </if>
      <if test="customernation != null" >
        #{customernation,jdbcType=VARCHAR},
      </if>
      <if test="customerbirthday != null" >
        #{customerbirthday,jdbcType=VARCHAR},
      </if>
      <if test="customerauthority != null" >
        #{customerauthority,jdbcType=VARCHAR},
      </if>
      <if test="customerexpdate != null" >
        #{customerexpdate,jdbcType=VARCHAR},
      </if>
      <if test="customeridheadurl != null" >
        #{customeridheadurl,jdbcType=VARCHAR},
      </if>
      <if test="customeraddress != null" >
        #{customeraddress,jdbcType=VARCHAR},
      </if>
      <if test="identityfacadefileurl != null" >
        #{identityfacadefileurl,jdbcType=VARCHAR},
      </if>
      <if test="identitybackfileurl != null" >
        #{identitybackfileurl,jdbcType=VARCHAR},
      </if>
      <if test="scenephotofileurl != null" >
        #{scenephotofileurl,jdbcType=VARCHAR},
      </if>
      <if test="signaturefileurl != null" >
        #{signaturefileurl,jdbcType=VARCHAR},
      </if>
      <if test="tapefileurl != null" >
        #{tapefileurl,jdbcType=VARCHAR},
      </if>
      <if test="isfacecompare != null" >
        #{isfacecompare,jdbcType=INTEGER},
      </if>
      <if test="gridphotosource != null" >
        #{gridphotosource,jdbcType=INTEGER},
      </if>
      <if test="callStatus != null" >
        #{callStatus,jdbcType=INTEGER},
      </if>
      <if test="faceMemo != null" >
        #{faceMemo,jdbcType=VARCHAR},
      </if>
      <if test="faceTime != null" >
        #{faceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="faceStatu != null" >
        #{faceStatu,jdbcType=VARCHAR},
      </if>
      <if test="ismain != null" >
        #{ismain,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.yanmai.model.example.CustomerTaskExample" resultType="java.lang.Integer" >
    select count(*) from t_customer_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_customer_task
    <set >
      <if test="record.taskid != null" >
        taskid = #{record.taskid,jdbcType=VARCHAR},
      </if>
      <if test="record.customerid != null" >
        customerid = #{record.customerid,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.atStep != null" >
        at_step = #{record.atStep,jdbcType=INTEGER},
      </if>
      <if test="record.customerdoccode != null" >
        customerdoccode = #{record.customerdoccode,jdbcType=VARCHAR},
      </if>
      <if test="record.customersex != null" >
        customersex = #{record.customersex,jdbcType=VARCHAR},
      </if>
      <if test="record.customernation != null" >
        customernation = #{record.customernation,jdbcType=VARCHAR},
      </if>
      <if test="record.customerbirthday != null" >
        customerbirthday = #{record.customerbirthday,jdbcType=VARCHAR},
      </if>
      <if test="record.customerauthority != null" >
        customerauthority = #{record.customerauthority,jdbcType=VARCHAR},
      </if>
      <if test="record.customerexpdate != null" >
        customerexpdate = #{record.customerexpdate,jdbcType=VARCHAR},
      </if>
      <if test="record.customeridheadurl != null" >
        customeridheadurl = #{record.customeridheadurl,jdbcType=VARCHAR},
      </if>
      <if test="record.customeraddress != null" >
        customeraddress = #{record.customeraddress,jdbcType=VARCHAR},
      </if>
      <if test="record.identityfacadefileurl != null" >
        identityFacadefileurl = #{record.identityfacadefileurl,jdbcType=VARCHAR},
      </if>
      <if test="record.identitybackfileurl != null" >
        identityBackfileurl = #{record.identitybackfileurl,jdbcType=VARCHAR},
      </if>
      <if test="record.scenephotofileurl != null" >
        scenephotofileurl = #{record.scenephotofileurl,jdbcType=VARCHAR},
      </if>
      <if test="record.signaturefileurl != null" >
        signaturefileurl = #{record.signaturefileurl,jdbcType=VARCHAR},
      </if>
      <if test="record.tapefileurl != null" >
        tapefileurl = #{record.tapefileurl,jdbcType=VARCHAR},
      </if>
      <if test="record.isfacecompare != null" >
        isfacecompare = #{record.isfacecompare,jdbcType=INTEGER},
      </if>
      <if test="record.gridphotosource != null" >
        gridphotosource = #{record.gridphotosource,jdbcType=INTEGER},
      </if>
      <if test="record.callStatus != null" >
        call_status = #{record.callStatus,jdbcType=INTEGER},
      </if>
      <if test="record.faceMemo != null" >
        face_memo = #{record.faceMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.faceTime != null" >
        face_time = #{record.faceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.faceStatu != null" >
        face_statu = #{record.faceStatu,jdbcType=VARCHAR},
      </if>
      <if test="record.ismain != null" >
        ismain = #{record.ismain,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_customer_task
    set taskid = #{record.taskid,jdbcType=VARCHAR},
      customerid = #{record.customerid,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      at_step = #{record.atStep,jdbcType=INTEGER},
      customerdoccode = #{record.customerdoccode,jdbcType=VARCHAR},
      customersex = #{record.customersex,jdbcType=VARCHAR},
      customernation = #{record.customernation,jdbcType=VARCHAR},
      customerbirthday = #{record.customerbirthday,jdbcType=VARCHAR},
      customerauthority = #{record.customerauthority,jdbcType=VARCHAR},
      customerexpdate = #{record.customerexpdate,jdbcType=VARCHAR},
      customeridheadurl = #{record.customeridheadurl,jdbcType=VARCHAR},
      customeraddress = #{record.customeraddress,jdbcType=VARCHAR},
      identityFacadefileurl = #{record.identityfacadefileurl,jdbcType=VARCHAR},
      identityBackfileurl = #{record.identitybackfileurl,jdbcType=VARCHAR},
      scenephotofileurl = #{record.scenephotofileurl,jdbcType=VARCHAR},
      signaturefileurl = #{record.signaturefileurl,jdbcType=VARCHAR},
      tapefileurl = #{record.tapefileurl,jdbcType=VARCHAR},
      isfacecompare = #{record.isfacecompare,jdbcType=INTEGER},
      gridphotosource = #{record.gridphotosource,jdbcType=INTEGER},
      call_status = #{record.callStatus,jdbcType=INTEGER},
      face_memo = #{record.faceMemo,jdbcType=VARCHAR},
      face_time = #{record.faceTime,jdbcType=TIMESTAMP},
      face_statu = #{record.faceStatu,jdbcType=VARCHAR},
      ismain = #{record.ismain,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.yanmai.model.CustomerTask" >
    update t_customer_task
    <set >
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="atStep != null" >
        at_step = #{atStep,jdbcType=INTEGER},
      </if>
      <if test="customerdoccode != null" >
        customerdoccode = #{customerdoccode,jdbcType=VARCHAR},
      </if>
      <if test="customersex != null" >
        customersex = #{customersex,jdbcType=VARCHAR},
      </if>
      <if test="customernation != null" >
        customernation = #{customernation,jdbcType=VARCHAR},
      </if>
      <if test="customerbirthday != null" >
        customerbirthday = #{customerbirthday,jdbcType=VARCHAR},
      </if>
      <if test="customerauthority != null" >
        customerauthority = #{customerauthority,jdbcType=VARCHAR},
      </if>
      <if test="customerexpdate != null" >
        customerexpdate = #{customerexpdate,jdbcType=VARCHAR},
      </if>
      <if test="customeridheadurl != null" >
        customeridheadurl = #{customeridheadurl,jdbcType=VARCHAR},
      </if>
      <if test="customeraddress != null" >
        customeraddress = #{customeraddress,jdbcType=VARCHAR},
      </if>
      <if test="identityfacadefileurl != null" >
        identityFacadefileurl = #{identityfacadefileurl,jdbcType=VARCHAR},
      </if>
      <if test="identitybackfileurl != null" >
        identityBackfileurl = #{identitybackfileurl,jdbcType=VARCHAR},
      </if>
      <if test="scenephotofileurl != null" >
        scenephotofileurl = #{scenephotofileurl,jdbcType=VARCHAR},
      </if>
      <if test="signaturefileurl != null" >
        signaturefileurl = #{signaturefileurl,jdbcType=VARCHAR},
      </if>
      <if test="tapefileurl != null" >
        tapefileurl = #{tapefileurl,jdbcType=VARCHAR},
      </if>
      <if test="isfacecompare != null" >
        isfacecompare = #{isfacecompare,jdbcType=INTEGER},
      </if>
      <if test="gridphotosource != null" >
        gridphotosource = #{gridphotosource,jdbcType=INTEGER},
      </if>
      <if test="callStatus != null" >
        call_status = #{callStatus,jdbcType=INTEGER},
      </if>
      <if test="faceMemo != null" >
        face_memo = #{faceMemo,jdbcType=VARCHAR},
      </if>
      <if test="faceTime != null" >
        face_time = #{faceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="faceStatu != null" >
        face_statu = #{faceStatu,jdbcType=VARCHAR},
      </if>
      <if test="ismain != null" >
        ismain = #{ismain,jdbcType=INTEGER},
      </if>
    </set>
    where taskid = #{taskid,jdbcType=VARCHAR}
      and customerid = #{customerid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yanmai.model.CustomerTask" >
    update t_customer_task
    set createTime = #{createtime,jdbcType=TIMESTAMP},
      at_step = #{atStep,jdbcType=INTEGER},
      customerdoccode = #{customerdoccode,jdbcType=VARCHAR},
      customersex = #{customersex,jdbcType=VARCHAR},
      customernation = #{customernation,jdbcType=VARCHAR},
      customerbirthday = #{customerbirthday,jdbcType=VARCHAR},
      customerauthority = #{customerauthority,jdbcType=VARCHAR},
      customerexpdate = #{customerexpdate,jdbcType=VARCHAR},
      customeridheadurl = #{customeridheadurl,jdbcType=VARCHAR},
      customeraddress = #{customeraddress,jdbcType=VARCHAR},
      identityFacadefileurl = #{identityfacadefileurl,jdbcType=VARCHAR},
      identityBackfileurl = #{identitybackfileurl,jdbcType=VARCHAR},
      scenephotofileurl = #{scenephotofileurl,jdbcType=VARCHAR},
      signaturefileurl = #{signaturefileurl,jdbcType=VARCHAR},
      tapefileurl = #{tapefileurl,jdbcType=VARCHAR},
      isfacecompare = #{isfacecompare,jdbcType=INTEGER},
      gridphotosource = #{gridphotosource,jdbcType=INTEGER},
      call_status = #{callStatus,jdbcType=INTEGER},
      face_memo = #{faceMemo,jdbcType=VARCHAR},
      face_time = #{faceTime,jdbcType=TIMESTAMP},
      face_statu = #{faceStatu,jdbcType=VARCHAR},
      ismain = #{ismain,jdbcType=INTEGER}
    where taskid = #{taskid,jdbcType=VARCHAR}
      and customerid = #{customerid,jdbcType=VARCHAR}
  </update>
</mapper>